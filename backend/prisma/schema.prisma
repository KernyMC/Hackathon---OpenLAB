// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model TipoUsuario {
  id          Int      @id @default(autoincrement())
  descripcion String   @db.VarChar(100)
  
  // Relaciones
  usuarios    Usuario[]
  
  @@map("TipoUsuario")
}

model Usuario {
  id            Int         @id @default(autoincrement())
  nombres       String      @db.VarChar(100)
  apellidos     String      @db.VarChar(100)
  email         String      @unique @db.VarChar(150)
  password      String      @db.VarChar(255)
  cedula        String      @db.VarChar(150)
  idTipoUsuario Int         @map("id_tipo_usuario")
  createdAt     DateTime    @default(now()) @map("created_at")
  lastLogin     DateTime?   @map("last_login")
  
  // Relaciones
  tipoUsuario   TipoUsuario @relation(fields: [idTipoUsuario], references: [id])
  usuarioOngs   UsuarioOng[]
  sessions      Session[]
  
  @@map("Usuario")
}

model ONG {
  id          Int         @id @default(autoincrement())
  nombre      String      @db.VarChar(150)
  descripcion String?
  
  // Relaciones
  usuarioOngs UsuarioOng[]
  proyectos   Proyecto[]
  
  @@map("ONG")
}

model UsuarioOng {
  id       Int @id @default(autoincrement())
  idUsuario Int @map("id_usuario")
  idOng    Int @map("id_ong")
  
  // Relaciones
  usuario  Usuario @relation(fields: [idUsuario], references: [id])
  ong      ONG     @relation(fields: [idOng], references: [id])
  
  @@map("usuario_ong")
}

model Proyecto {
  id          Int    @id @default(autoincrement())
  nombre      String @db.VarChar(150)
  descripcion String?
  idOng       Int    @map("id_ong")
  
  // Relaciones
  ong         ONG    @relation(fields: [idOng], references: [id])
  ejes        Eje[]
  ejesObservables EjeObservable[]
  items       Item[]
  itemsObservables ItemObservable[]
  
  @@map("Proyecto")
}

model Eje {
  id         Int    @id @default(autoincrement())
  nombre     String @db.VarChar(150)
  idProyecto Int    @map("id_proyecto")
  
  // Relaciones
  proyecto   Proyecto @relation(fields: [idProyecto], references: [id])
  kpis       KPI[]
  
  @@map("Eje")
}

model KPI {
  id     Int    @id @default(autoincrement())
  nombre String @db.VarChar(150)
  idEje  Int    @map("id_eje")
  
  // Relaciones
  eje    Eje    @relation(fields: [idEje], references: [id])
  items  Item[]
  
  @@map("KPI")
}

model Item {
  id                Int            @id @default(autoincrement())
  idKpi             Int            @map("id_kpi")
  idProyecto        Int            @map("id_proyecto")
  descripcion       String?
  idTipoDatoItem    Int            @map("id_tipo_dato_item")
  
  // Relaciones
  kpi               KPI            @relation(fields: [idKpi], references: [id])
  proyecto          Proyecto       @relation(fields: [idProyecto], references: [id])
  tipoDatoItem      TipoDatoItem   @relation(fields: [idTipoDatoItem], references: [id])
  
  @@map("Item")
}

model EjeObservable {
  id         Int    @id @default(autoincrement())
  nombre     String @db.VarChar(150)
  idProyecto Int    @map("id_proyecto")
  
  // Relaciones
  proyecto   Proyecto @relation(fields: [idProyecto], references: [id])
  kpisObservables KPIObservable[]
  
  @@map("Eje_Observable")
}

model KPIObservable {
  id     Int    @id @default(autoincrement())
  nombre String @db.VarChar(150)
  idEje  Int    @map("id_eje")
  
  // Relaciones
  eje    EjeObservable @relation(fields: [idEje], references: [id])
  itemsObservables ItemObservable[]
  
  @@map("KPI_Observable")
}

model ItemObservable {
  id                Int            @id @default(autoincrement())
  idKpi             Int            @map("id_kpi")
  idProyecto        Int            @map("id_proyecto")
  descripcion       String?
  idTipoDatoItem    Int            @map("id_tipo_dato_item")
  
  // Relaciones
  kpi               KPIObservable  @relation(fields: [idKpi], references: [id])
  proyecto          Proyecto       @relation(fields: [idProyecto], references: [id])
  tipoDatoItem      TipoDatoItem   @relation(fields: [idTipoDatoItem], references: [id])
  
  @@map("Item_Observable")
}

model TipoDatoItem {
  id          Int    @id @default(autoincrement())
  descripcion String? @db.VarChar(150)
  
  // Relaciones
  items       Item[]
  itemsObservables ItemObservable[]
  
  @@map("tipo_dato_item")
}

model Session {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  token     String   @unique
  expiresAt DateTime @map("expires_at")
  createdAt DateTime @default(now()) @map("created_at")
  
  // Relaciones
  user      Usuario  @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("sessions")
}
